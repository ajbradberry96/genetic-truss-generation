#BlueJ class context
comment0.params=coordinates
comment0.target=Joint(double[])
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ Joint\r\n\ @param\ The\ coordinates\ of\ the\ joint\r\n
comment1.params=
comment1.target=void\ findTensions()
comment1.text=\r\n\ Find\ the\ tensions\ of\ the\ members\ at\ the\ joint\ that\ have\ not\ yet\ been\ found.\r\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\r\n\ @return\ The\ coordinates\ of\ the\ joint\r\n
comment11.params=other_joint\ dir
comment11.target=double\ findScaler(Joint,\ char)
comment11.text=\r\n\ Finds\ the\ scaler\ for\ a\ tension\ in\ a\ particular\ direction\r\n\ @param\ other_joint\ The\ other\ joint\ the\ member\ is\ connected\ to\r\n\ @param\ dir\ Either\ in\ the\ x\ or\ y\ direction\r\n\ @return\ the\ scaler\ multiplier\ in\ that\ direction\r\n
comment12.params=x
comment12.target=void\ set_x(double)
comment13.params=y
comment13.target=void\ set_y(double)
comment14.params=
comment14.target=int\ getMembersSize()
comment15.params=
comment15.target=java.util.ArrayList\ getMembers()
comment2.params=
comment2.target=void\ findOneTension()
comment2.text=\r\n\ Finds\ the\ tension\ in\ the\ last\ remaining\ member\r\n
comment3.params=
comment3.target=void\ findTwoTensions()
comment3.text=\r\n\ Find\ the\ tensions\ of\ the\ two\ members\ that\ have\ yet\ to\ be\ found\r\n
comment4.params=member
comment4.target=void\ addMember(Member)
comment4.text=\r\n\ Adds\ a\ member\ to\ the\ ArrayList<>\ members\r\n\ @param\ member\ Member\ to\ be\ added\r\n
comment5.params=
comment5.target=double\ get_x()
comment5.text=\r\n\ Returns\ the\ x\ coordinate\ of\ the\ joint\r\n\ @return\ x\ coordinate\ of\ joint\r\n
comment6.params=
comment6.target=double\ get_y()
comment6.text=\r\n\ Returns\ the\ y\ coordinate\ of\ the\ joint\r\n\ @return\ y\ coordinate\ of\ joint\r\n
comment7.params=
comment7.target=boolean\ isFindable()
comment7.text=\r\n\ Returns\ true\ if\ the\ tensions\ of\ the\ unfound\ members\ can\ be\ found,\ \r\n\ returns\ false\ if\ there\ are\ no\ unfound\ members\ or\ if\ there\ is\ not\ enough\ \r\n\ information\ to\ solve\ for\ the\ tensions\ in\ all\ of\ the\ remaining\ members.\r\n\ @return\ true\ if\ the\ unfound\ members\ can\ be\ found\r\n
comment8.params=
comment8.target=boolean\ isFound()
comment8.text=\r\n\ @return\ true\ if\ all\ members\ have\ been\ found\r\n
comment9.params=reaction
comment9.target=void\ setReaction(int)
comment9.text=\r\n\ Set\ the\ y-reaction\ force\ at\ the\ joint\ in\ lbf.\ \r\n\ @param\ reaction\ The\ new\ reaction\ force\r\n
numComments=16
